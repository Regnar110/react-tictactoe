{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mateusz\\\\Desktop\\\\Github-projects\\\\react-tictactoe\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport Board from './Board.js';\nimport { squares } from './squares-object.js';\nimport { resultArr } from './resultArr.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.playerMove = event => {\n      const {\n        player,\n        squares\n      } = this.state;\n\n      if (player === 1) {\n        this.setState({\n          player: 2\n        }, () => {\n          // wyszukujemy w tablicy squares obiekt pasujący do if event.target.id i w tym obiekcie do właściwośći content dodajemy X lub O w zależności od kolejki\n          const squareId = event.target.id.toString();\n          squares.map(element => {\n            if (squareId in element) {\n              element.content = 'X';\n              console.log(element);\n            } else {\n              console.log('nic');\n            }\n          });\n        });\n      } else {\n        this.setState({\n          player: 1\n        }, () => console.log(event.target.id));\n      }\n    };\n\n    this.state = {\n      player: 1,\n      // 1 to gracz nr 2 to gracz nr  - stan kontrolujący kolejkę\n      squares: squares // tablica w której każda pozycja odpowiada jednemu kwadratowi na planszy [sq1, sq2, sq3 itd]. Posłuży ona do tego aby wyłonić zwycięzcę gry oraz do implementacji elementów do komponentu square oraz do generowania kwadratów na planszy.\n\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"game-header\",\n          children: \"TIC-TAC-TOE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        squaresList: squares,\n        playerMove: this.playerMove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Mateusz/Desktop/Github-projects/react-tictactoe/src/App.js"],"names":["React","Component","Fragment","Board","squares","resultArr","App","constructor","playerMove","event","player","state","setState","squareId","target","id","toString","map","element","content","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,SAAQC,SAAR,QAAwB,gBAAxB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AACxBM,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,UARc,GAQAC,KAAD,IAAW;AACpB,YAAM;AAAEC,QAAAA,MAAF;AAAUN,QAAAA;AAAV,UAAsB,KAAKO,KAAjC;;AACA,UAAGD,MAAM,KAAK,CAAd,EAAiB;AACb,aAAKE,QAAL,CAAc;AAACF,UAAAA,MAAM,EAAE;AAAT,SAAd,EAA2B,MAAM;AAC7B;AACJ,gBAAMG,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAaC,EAAb,CAAgBC,QAAhB,EAAjB;AACAZ,UAAAA,OAAO,CAACa,GAAR,CAAYC,OAAO,IAAI;AACnB,gBAAGL,QAAQ,IAAIK,OAAf,EAAwB;AACpBA,cAAAA,OAAO,CAACC,OAAR,GAAkB,GAAlB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACH,aAHD,MAGO;AACHE,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;AACJ,WAPD;AAQH,SAXG;AAYH,OAbD,MAaO;AACH,aAAKT,QAAL,CAAc;AAACF,UAAAA,MAAM,EAAE;AAAT,SAAd,EAA2B,MAAMU,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACK,MAAN,CAAaC,EAAzB,CAAjC;AACH;AACJ,KA1Ba;;AAEV,SAAKJ,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE,CADC;AACE;AACXN,MAAAA,OAAO,EAAEA,OAFA,CAEQ;;AAFR,KAAb;AAIH;;AAsBDkB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BAAuC;AAAI,UAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,WAAW,EAAElB,OAApB;AAA6B,QAAA,UAAU,EAAE,KAAKI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApCuB;;AAwC5B,eAAeF,GAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport Board from './Board.js';\r\nimport {squares} from './squares-object.js';\r\nimport {resultArr} from './resultArr.js';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            player: 1, // 1 to gracz nr 2 to gracz nr  - stan kontrolujący kolejkę\r\n            squares: squares // tablica w której każda pozycja odpowiada jednemu kwadratowi na planszy [sq1, sq2, sq3 itd]. Posłuży ona do tego aby wyłonić zwycięzcę gry oraz do implementacji elementów do komponentu square oraz do generowania kwadratów na planszy.\r\n        }\r\n    }\r\n\r\n    playerMove = (event) => {\r\n        const { player, squares } = this.state;\r\n        if(player === 1) {\r\n            this.setState({player: 2}, () => {\r\n                // wyszukujemy w tablicy squares obiekt pasujący do if event.target.id i w tym obiekcie do właściwośći content dodajemy X lub O w zależności od kolejki\r\n            const squareId = event.target.id.toString();\r\n            squares.map(element => {\r\n                if(squareId in element) {\r\n                    element.content = 'X';\r\n                    console.log(element);\r\n                } else {\r\n                    console.log('nic');\r\n                }                 \r\n            });\r\n        })\r\n        } else {\r\n            this.setState({player: 1}, () => console.log(event.target.id))\r\n        }\r\n    }   \r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div className='game-header-container'><h1 id='game-header'>TIC-TAC-TOE</h1></div>\r\n                <Board squaresList={squares} playerMove={this.playerMove}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}